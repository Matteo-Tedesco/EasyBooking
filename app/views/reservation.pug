extends layout

block contentReservation
    div(style="text-align: center")
        h1 Effettua una prenotazione

        each dep in deps.rows
                h3 #{dep.key}
                //- Raccoglie gli orari del dipartimento corrente
                - var curr_wd_arr = []
                each wd in wds.rows
                    if wd.key.dep_name == dep.key
                        - curr_wd_arr.push(wd)
                //- Raccoglie gli spazi del dipartimento corrente
                - var curr_sp_arr = []
                each sp in sps.rows
                    if sp.key.dep_name == dep.key
                        - curr_sp_arr.push(sp)
                //- Raccoglie i posti del dipartimento corrente
                - var curr_st_arr = []
                each st in sts.rows
                    if st.key.dep_name == dep.key
                        - curr_st_arr.push(st)
                //- Raccoglie le prenotazioni del dipartimento corrente
                - var curr_reserv_arr = []
                each reserv in reservs.rows
                    if reserv.value.fields.dep_name == dep.key
                        - curr_reserv_arr.push(reserv)
                //- Raccoglie gli id dei posti prenotati, delle prenotazioni e gli orari gia prenotati dell'utete corrente
                - var reserved_seats_ids = []
                - var reserved_seats_res_id = []
                - var reserved_seats_wd = []
                each reserv in reservs.rows
                    if reserv.value.fields.email == userId
                        - reserved_seats_ids.push(reserv.value.fields.seat_id)
                        - reserved_seats_res_id.push(reserv.id)
                        - reserved_seats_wd.push(String(reserv.value.fields.start_date.Y)+((String(reserv.value.fields.start_date.M).length == 1)? "0"+String(reserv.value.fields.start_date.M):String(reserv.value.fields.start_date.M))+((String(reserv.value.fields.start_date.D).length == 1)? "0"+String(reserv.value.fields.start_date.D):String(reserv.value.fields.start_date.D))+((String(reserv.value.fields.start_date.h).length == 1)? "0"+String(reserv.value.fields.start_date.h):String(reserv.value.fields.start_date.h)))

                //- La data di oggi
                - const today = new Date()
                //- Array per l'inserimento dei giorni in italiano nella tabella
                - var it_days = ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato", "Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"]
                //- Dizionario per inizializzare i dati da inserire nelle righe della tabella
                - var days = {"Lunedì": ["Chiuso", 24, 0], "Martedì": ["Chiuso", 24, 0], "Mercoledì": ["Chiuso", 24, 0], "Giovedì": ["Chiuso", 24, 0], "Venerdì": ["Chiuso", 24, 0], "Sabato": ["Chiuso", 24, 0], "Domenica": ["Chiuso", 24, 0]}
                //- Insericse i dati del dipartimento corrente in days e inizializza il minimo orario di apertura ed il massimo orario di chiusura della settimana
                - var min_ap = 24
                - var max_ch = 0
                each wd in curr_wd_arr
                    if (wd.value.fields.state == "Aperto")
                        - days[wd.key.day] = [wd.value.fields.state, wd.value.fields.apertura.h, wd.value.fields.chiusura.h]
                        - min_ap = (min_ap > wd.value.fields.apertura.h)? wd.value.fields.apertura.h : min_ap
                        - max_ch = (max_ch < wd.value.fields.chiusura.h)? wd.value.fields.chiusura.h : max_ch

                each sp in curr_sp_arr
                    h3 #{sp.key.typology} - #{sp.key.name}

                    //- Raccoglie i posti dello spazio corrente
                    - var curr_sp_st_arr = []
                    each st in curr_st_arr
                        if st.key.space_name == sp.key.name && st.key.typology == sp.key.typology
                            - curr_sp_st_arr.push(st)

                    table(width="80%", style="margin: 1% 10% 1% 10%")
                        //- Prima riga che mostra il giorno della settimana e la data nel formato 'giorno-mese-anno'
                        tr
                            td(style="padding: 2px; text-align: center")
                                h4 Orari
                            td(style="padding: 2px 20px 2px 20px; text-align: center")
                                h4 #{it_days[(today.getDay()+0)]} #{String(new Date(new Date().setDate(today.getDate()+0)).getDate())+"/"+String(new Date(new Date().setDate(today.getDate()+0)).getMonth()+1)+"/"+String(new Date(new Date().setDate(today.getDate()+0)).getFullYear())}
                            td(style="padding: 2px 20px 2px 20px; text-align: center")
                                h4 #{it_days[(today.getDay()+1)]} #{String(new Date(new Date().setDate(today.getDate()+1)).getDate())+"/"+String(new Date(new Date().setDate(today.getDate()+1)).getMonth()+1)+"/"+String(new Date(new Date().setDate(today.getDate()+1)).getFullYear())}
                            td(style="padding: 2px 20px 2px 20px; text-align: center")
                                h4 #{it_days[(today.getDay()+2)]} #{String(new Date(new Date().setDate(today.getDate()+2)).getDate())+"/"+String(new Date(new Date().setDate(today.getDate()+2)).getMonth()+1)+"/"+String(new Date(new Date().setDate(today.getDate()+2)).getFullYear())}
                            td(style="padding: 2px 20px 2px 20px; text-align: center")
                                h4 #{it_days[(today.getDay()+3)]} #{String(new Date(new Date().setDate(today.getDate()+3)).getDate())+"/"+String(new Date(new Date().setDate(today.getDate()+3)).getMonth()+1)+"/"+String(new Date(new Date().setDate(today.getDate()+3)).getFullYear())}
                            td(style="padding: 2px 20px 2px 20px; text-align: center")
                                h4 #{it_days[(today.getDay()+4)]} #{String(new Date(new Date().setDate(today.getDate()+4)).getDate())+"/"+String(new Date(new Date().setDate(today.getDate()+4)).getMonth()+1)+"/"+String(new Date(new Date().setDate(today.getDate()+4)).getFullYear())}
                            td(style="padding: 2px 20px 2px 20px; text-align: center")
                                h4 #{it_days[(today.getDay()+5)]} #{String(new Date(new Date().setDate(today.getDate()+5)).getDate())+"/"+String(new Date(new Date().setDate(today.getDate()+5)).getMonth()+1)+"/"+String(new Date(new Date().setDate(today.getDate()+5)).getFullYear())}
                            td(style="padding: 2px 20px 2px 20px; text-align: center")
                                h4 #{it_days[(today.getDay()+6)]} #{String(new Date(new Date().setDate(today.getDate()+6)).getDate())+"/"+String(new Date(new Date().setDate(today.getDate()+6)).getMonth()+1)+"/"+String(new Date(new Date().setDate(today.getDate()+6)).getFullYear())}

                        //- Corpo delle righe che mostra gli orari e le check per prenotare
                        //- Per ogni ora tra l'apertura minima e la chiusura massima
                        - var h = 0
                        while h < max_ch-min_ap
                            tr
                                - var reserved_seats = [0, 0, 0, 0, 0, 0, 0] //- Array per tenere memoria se il posto è prenotato dall'utente corrente o meno
                                - var reserved_wd =    [0, 0, 0, 0, 0, 0, 0] //- Array per tenere memoria se l'orario è prenotato dall'utente corrente o meno
                                - var free_seats_day = [0, 0, 0, 0, 0, 0, 0] //- Array per tenere memoria del numero di posti liberi per ogni giorno
                                - var row_seats =      [0, 0, 0, 0, 0, 0, 0] //- Array per tenere memoria dell'id da prenotare nelle celle selezionate

                                //- Inizializza le variabili sopra riportate per il completamento della tabella
                                each st in curr_sp_st_arr

                                    - const today_YMD_str       = String((today.getFullYear()))+((String((today.getMonth()+1)).length == 1)? "0"+String((today.getMonth()+1)):String((today.getMonth()+1)))+((String((today.getDate())).length == 1)? "0"+String((today.getDate())):String((today.getDate())))
                                    - const today_YMDh_str      = String((today.getFullYear()))+((String((today.getMonth()+1)).length == 1)? "0"+String((today.getMonth()+1)):String((today.getMonth()+1)))+((String((today.getDate())).length == 1)? "0"+String((today.getDate())):String((today.getDate())))+((String((today.getHours()+2)).length == 1)? "0"+String((today.getHours()+2)):String((today.getHours()+2)))
                                    - var   start_date_YMD_str  = String(st.value.fields.start_date.Y)+((String(st.value.fields.start_date.M).length == 1)? '0'+String(st.value.fields.start_date.M):String(st.value.fields.start_date.M))+((String(st.value.fields.start_date.D).length == 1)? '0'+String(st.value.fields.start_date.D):String(st.value.fields.start_date.D))
                                    - var   start_date_YMDh_str = String(st.value.fields.start_date.Y)+((String(st.value.fields.start_date.M).length == 1)? '0'+String(st.value.fields.start_date.M):String(st.value.fields.start_date.M))+((String(st.value.fields.start_date.D).length == 1)? '0'+String(st.value.fields.start_date.D):String(st.value.fields.start_date.D))+((String(st.value.fields.start_date.h).length == 1)? "0"+String(st.value.fields.start_date.h):String(st.value.fields.start_date.h))

                                    - var today_plus_d = ''
                                    - var today_plus_day_num_str = ''
                                    - var d = 0
                                    while d < 7
                                        - today_plus_d = new Date((new Date()).setDate(today.getDate()+d))
                                        - today_plus_d_str = String(today_plus_d.getFullYear())+((String(today_plus_d.getMonth()+1).length == 1)? "0"+String(today_plus_d.getMonth()+1):String(today_plus_d.getMonth()+1))+((String(today_plus_d.getDate()).length == 1)? "0"+String(today_plus_d.getDate()):String(today_plus_d.getDate()))
                                        //- p #{(start_date_YMD_str == today_plus_d_str)? '':start_date_YMD_str+'|'+today_plus_d_str+'='+(start_date_YMD_str == today_plus_d_str)}
                                        if start_date_YMD_str == today_plus_d_str
                                            - break
                                        - d ++

                                    //- Inizializzazione
                                    if (st.value.fields.start_date.h == min_ap+h) && (start_date_YMD_str == today_plus_d_str)
                                        if (st.value.fields.state == "Expired") && (d == 0)
                                            - row_seats[d] = -1
                                        else
                                            if (reserved_seats_wd.includes(start_date_YMDh_str))
                                                - reserved_wd[d] = 1
                                            if (reserved_seats_ids.includes(st.id))
                                                - reserved_seats[d] = reserved_seats_res_id[reserved_seats_ids.indexOf(st.id)]
                                            else
                                                - free_seats_day[d] = sp.value.fields.number_of_seats - st.value.fields.position + 1
                                            - row_seats[d] = st

                                //- Inserisce l'orario di riferimento della riga nel primo td
                                td(style="padding: 2px; text-align: center") 
                                    h6 #{(String(min_ap+h).length == 1)? '0'+(min_ap+h):(min_ap+h)}:00
                                    //- p #{'free_seats_day'+free_seats_day}
                                //- Inserisce i dati opportuni a seconda dei casi nei 7 td dei giorni della settimana
                                each d_number in [0,1,2,3,4,5,6]
                                    //- Controlla se è chiuso
                                    - var current_wd_control = days[it_days[(new Date((new Date()).setDate(today.getDate()+d_number))).getDay()]]
                                    if current_wd_control[0] == "Chiuso" || (((min_ap+h) < current_wd_control[1]) || ((min_ap+h) >= current_wd_control[2]))
                                        td(style="padding: 2px; text-align: center; color: grey") Chiuso
                                    //- Se ormai è un orario oltrepassato e quindi non più prenotabile
                                    else if row_seats[d_number] == -1
                                        td(style="padding: 2px; text-align: center; color: grey") Scaduto
                                    //- Se l'utente corrente ha gia prenotato questo orario
                                    else if reserved_seats[d_number] != 0
                                        td(style="padding: 2px; text-align: center; color: green")
                                            form(method="post" action="/reservation/rm_res")
                                                input(type="hidden" value=csrfToken                                             name="_csrf")
                                                //- Reservation id
                                                input(type="hidden" value=String(reserved_seats[d_number])                      name="res_id")
                                                //- Seat's data
                                                input(type="hidden" value=String(row_seats[d_number].id)                        name="id")
                                                input(type="hidden" value=String(row_seats[d_number].value.rev)                 name="rev")
                                                input(type="hidden" value=String(row_seats[d_number].key.dep_name)              name="dep_name")
                                                input(type="hidden" value=String(row_seats[d_number].key.typology)              name="typology")
                                                input(type="hidden" value=String(row_seats[d_number].key.space_name)            name="space_name")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.position)     name="position")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.state)        name="state")
                                                //- Start_date
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.Y) name="start_Y")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.M) name="start_M")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.D) name="start_D")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.h) name="start_h")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.m) name="start_m")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.s) name="start_s")
                                                //- End_date
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.Y)   name="end_Y")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.M)   name="end_M")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.D)   name="end_D")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.h)   name="end_h")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.m)   name="end_m")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.s)   name="end_s")

                                                input(type="submit" value="Prenotato\n(Click per disdire)\n" style="background-color: lightgreen")
                                    //- Se l'orario corrente è gia stato prenotato in un altro spazio
                                    else if reserved_wd[d_number] == 1
                                        td(style="padding: 2px; text-align: center; color: grey") Non disponibile
                                    //- Se i posti in quell'orario sono al completo
                                    else if free_seats_day[d_number] == 0
                                        td(style="padding: 2px; text-align: center; color: red") Completo
                                    //- Se non ci troviamo in nessuno dei casi precedenti scrive il numero di posti disponibili e Mostra lo switch per prenotare
                                    else
                                        td(style="padding: 2px; text-align: center")
                                            form(method="post" action="/reservation/make_res")
                                                input(type="hidden" value=csrfToken                                             name="_csrf")
                                                //- Reservation's owner (current user)
                                                input(type="hidden" value=String(userId)                                        name="email")
                                                //- Seat's data
                                                input(type="hidden" value=String(row_seats[d_number].id)                        name="id")
                                                input(type="hidden" value=String(row_seats[d_number].value.rev)                 name="rev")
                                                input(type="hidden" value=String(row_seats[d_number].key.dep_name)              name="dep_name")
                                                input(type="hidden" value=String(row_seats[d_number].key.typology)              name="typology")
                                                input(type="hidden" value=String(row_seats[d_number].key.space_name)            name="space_name")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.position)     name="position")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.state)        name="state")
                                                //- Start_date
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.Y) name="start_Y")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.M) name="start_M")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.D) name="start_D")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.h) name="start_h")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.m) name="start_m")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.start_date.s) name="start_s")
                                                //- End_date
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.Y)   name="end_Y")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.M)   name="end_M")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.D)   name="end_D")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.h)   name="end_h")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.m)   name="end_m")
                                                input(type="hidden" value=String(row_seats[d_number].value.fields.end_date.s)   name="end_s")

                                                input(type="submit" value="Prenota\n"+free_seats_day[d_number]+" liberi")
                                    - d_number++
                            - h++